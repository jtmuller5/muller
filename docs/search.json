[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Joe Muller and I am currently working through the Practical Deep Learning for Coders course by Fast AI."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Muller",
    "section": "",
    "text": "Fast AI Dental Radiographs\n\n\n\n\n\n\nfastai\n\n\ndeep-learning\n\n\n\nExploring dental radiographs with Fast AI.\n\n\n\n\n\nJul 5, 2024\n\n\nJoe Muller\n\n\n\n\n\n\n\n\n\n\n\n\nUnderstanding Your Dataset\n\n\n\n\n\n\npandas\n\n\ndeep-learning\n\n\n\nGeneric code blocks to grok your data.\n\n\n\n\n\nJul 5, 2024\n\n\nJoe Muller\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/fast-ai-intro-project/index.html",
    "href": "posts/fast-ai-intro-project/index.html",
    "title": "Fast AI Dental Radiographs",
    "section": "",
    "text": "Getting Started\nI’m currently working on the Fast AI course and this is my first project. I’m excited to see how well I can do.\n\n2+2\n\n4\n\n\n\n\nDeploying the Model\nHuggingFace Spaces and Gradio"
  },
  {
    "objectID": "posts/understanding-your-dataset/index.html",
    "href": "posts/understanding-your-dataset/index.html",
    "title": "Understanding Your Dataset",
    "section": "",
    "text": "Almost every time I start a new project, I begin by performing a cursory analysis of the data set. This sort of high-level analysis gives me a general idea about the kind of data I’m working with, the size of the data set, and the types of relationships I may be interested in exploring.\nI will be using the UFO Sightings dataset in this post to demonstrate useful methods for understanding your data. To get started, open the dataset in Kaggle and press the “Download” button and move the ufo-sightings-transformed.csv file into your working directory.\nInstall ipykernel if you haven’t already so you can keep your Jupyter notebook environment isolated.\npoetry add ipykernel\n\n%pip install pandas\n\nCollecting pandas\n  Downloading pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl.metadata (19 kB)\nCollecting numpy&gt;=1.26.0 (from pandas)\n  Downloading numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl.metadata (60 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 60.9/60.9 kB 2.7 MB/s eta 0:00:00\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from pandas) (2.9.0.post0)\nCollecting pytz&gt;=2020.1 (from pandas)\n  Downloading pytz-2024.1-py2.py3-none-any.whl.metadata (22 kB)\nCollecting tzdata&gt;=2022.7 (from pandas)\n  Downloading tzdata-2024.1-py2.py3-none-any.whl.metadata (1.4 kB)\nRequirement already satisfied: six&gt;=1.5 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\nDownloading pandas-2.2.2-cp312-cp312-macosx_11_0_arm64.whl (11.3 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.3/11.3 MB 55.8 MB/s eta 0:00:0000:010:01\nDownloading numpy-2.0.0-cp312-cp312-macosx_14_0_arm64.whl (5.0 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.0/5.0 MB 54.7 MB/s eta 0:00:00a 0:00:01\nDownloading pytz-2024.1-py2.py3-none-any.whl (505 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 505.5/505.5 kB 30.1 MB/s eta 0:00:00\nDownloading tzdata-2024.1-py2.py3-none-any.whl (345 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 345.4/345.4 kB 25.6 MB/s eta 0:00:00\nInstalling collected packages: pytz, tzdata, numpy, pandas\nSuccessfully installed numpy-2.0.0 pandas-2.2.2 pytz-2024.1 tzdata-2024.1\n\n[notice] A new release of pip is available: 24.0 -&gt; 24.1.1\n[notice] To update, run: pip install --upgrade pip\nNote: you may need to restart the kernel to use updated packages.\n\n\n\nimport pandas as pd\n\nfile_path = 'ufo-sightings-transformed.csv'\ndf = pd.read_csv(file_path)\n\n\nDisplay the First Few Rows\n\n\ndf.head()\n\n\n\n\n\n\n\n\nUnnamed: 0\nDate_time\ndate_documented\nYear\nMonth\nHour\nSeason\nCountry_Code\nCountry\nRegion\nLocale\nlatitude\nlongitude\nUFO_shape\nlength_of_encounter_seconds\nEncounter_Duration\nDescription\n\n\n\n\n0\n0\n1949-10-10 20:30:00\n4/27/2004\n1949\n10\n20\nAutumn\nUSA\nUnited States\nTexas\nSan Marcos\n29.883056\n-97.941111\nCylinder\n2700.0\n45 minutes\nThis event took place in early fall around 194...\n\n\n1\n1\n1949-10-10 21:00:00\n12/16/2005\n1949\n10\n21\nAutumn\nUSA\nUnited States\nTexas\nBexar County\n29.384210\n-98.581082\nLight\n7200.0\n1-2 hrs\n1949 Lackland AFB&#44 TX. Lights racing acros...\n\n\n2\n2\n1955-10-10 17:00:00\n1/21/2008\n1955\n10\n17\nAutumn\nGBR\nUnited Kingdom\nEngland\nChester\n53.200000\n-2.916667\nCircle\n20.0\n20 seconds\nGreen/Orange circular disc over Chester&#44 En...\n\n\n3\n3\n1956-10-10 21:00:00\n1/17/2004\n1956\n10\n21\nAutumn\nUSA\nUnited States\nTexas\nEdna\n28.978333\n-96.645833\nCircle\n20.0\n1/2 hour\nMy older brother and twin sister were leaving ...\n\n\n4\n4\n1960-10-10 20:00:00\n1/22/2004\n1960\n10\n20\nAutumn\nUSA\nUnited States\nHawaii\nKaneohe\n21.418056\n-157.803611\nLight\n900.0\n15 minutes\nAS a Marine 1st Lt. flying an FJ4B fighter/att...\n\n\n\n\n\n\n\n\nDisplay the Last Few Rows\n\n\ndf.tail()\n\n\n\n\n\n\n\n\nUnnamed: 0\nDate_time\ndate_documented\nYear\nMonth\nHour\nSeason\nCountry_Code\nCountry\nRegion\nLocale\nlatitude\nlongitude\nUFO_shape\nlength_of_encounter_seconds\nEncounter_Duration\nDescription\n\n\n\n\n80323\n80323\n2013-09-09 21:15:00\n9/30/2013\n2013\n9\n21\nAutumn\nUSA\nUnited States\nTennessee\nNashville\n36.165833\n-86.784444\nLight\n600.0\n10 minutes\nRound from the distance/slowly changing colors...\n\n\n80324\n80324\n2013-09-09 22:00:00\n9/30/2013\n2013\n9\n22\nAutumn\nUSA\nUnited States\nIdaho\nBoise\n43.613611\n-116.202500\nCircle\n1200.0\n20 minutes\nBoise&#44 ID&#44 spherical&#44 20 min&#44 10 r...\n\n\n80325\n80325\n2013-09-09 22:00:00\n9/30/2013\n2013\n9\n22\nAutumn\nUSA\nUnited States\nCalifornia\nNapa Abajo\n38.297222\n-122.284444\nOther\n1200.0\nhour\nNapa UFO&#44\n\n\n80326\n80326\n2013-09-09 22:20:00\n9/30/2013\n2013\n9\n22\nAutumn\nUSA\nUnited States\nVirginia\nVienna\n38.901111\n-77.265556\nCircle\n5.0\n5 seconds\nSaw a five gold lit cicular craft moving fastl...\n\n\n80327\n80327\n2013-09-09 23:00:00\n9/30/2013\n2013\n9\n23\nAutumn\nUSA\nUnited States\nOklahoma\nEdmond\n35.652778\n-97.477778\nCigar\n1020.0\n17 minutes\n2 witnesses 2 miles apart&#44 Red &amp; White...\n\n\n\n\n\n\n\n\nDisplay Basic Information\n\n\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 80328 entries, 0 to 80327\nData columns (total 17 columns):\n #   Column                       Non-Null Count  Dtype  \n---  ------                       --------------  -----  \n 0   Unnamed: 0                   80328 non-null  int64  \n 1   Date_time                    80328 non-null  object \n 2   date_documented              80328 non-null  object \n 3   Year                         80328 non-null  int64  \n 4   Month                        80328 non-null  int64  \n 5   Hour                         80328 non-null  int64  \n 6   Season                       80328 non-null  object \n 7   Country_Code                 80069 non-null  object \n 8   Country                      80069 non-null  object \n 9   Region                       79762 non-null  object \n 10  Locale                       79871 non-null  object \n 11  latitude                     80328 non-null  float64\n 12  longitude                    80328 non-null  float64\n 13  UFO_shape                    78398 non-null  object \n 14  length_of_encounter_seconds  80328 non-null  float64\n 15  Encounter_Duration           80328 non-null  object \n 16  Description                  80313 non-null  object \ndtypes: float64(3), int64(4), object(10)\nmemory usage: 10.4+ MB\n\n\n\nDisplay Summary Statistics\n\n\n# Display summary statistics for numerical columns\ndf.describe()\n\n\n\n\n\n\n\n\nUnnamed: 0\nYear\nMonth\nHour\nlatitude\nlongitude\nlength_of_encounter_seconds\n\n\n\n\ncount\n80328.000000\n80328.000000\n80328.000000\n80328.000000\n80328.000000\n80328.000000\n8.032800e+04\n\n\nmean\n40163.500000\n2003.850463\n6.835026\n15.525172\n38.124963\n-86.772015\n9.017336e+03\n\n\nstd\n23188.840549\n10.426547\n3.234876\n7.753750\n10.469146\n39.697805\n6.202322e+05\n\n\nmin\n0.000000\n1906.000000\n1.000000\n0.000000\n-82.862752\n-176.658056\n1.000000e-03\n\n\n25%\n20081.750000\n2001.000000\n4.000000\n10.000000\n34.134722\n-112.073333\n3.000000e+01\n\n\n50%\n40163.500000\n2006.000000\n7.000000\n19.000000\n39.412500\n-87.903611\n1.800000e+02\n\n\n75%\n60245.250000\n2011.000000\n9.000000\n21.000000\n42.788333\n-78.755000\n6.000000e+02\n\n\nmax\n80327.000000\n2014.000000\n12.000000\n23.000000\n72.700000\n178.441900\n9.783600e+07\n\n\n\n\n\n\n\n\nDisplay Column Names\n\n\n# Display the column names\ndf.columns\n\nIndex(['Unnamed: 0', 'Date_time', 'date_documented', 'Year', 'Month', 'Hour',\n       'Season', 'Country_Code', 'Country', 'Region', 'Locale', 'latitude',\n       'longitude', 'UFO_shape', 'length_of_encounter_seconds',\n       'Encounter_Duration', 'Description'],\n      dtype='object')\n\n\n\nDisplay Data Types of Columns\n\n\n# Display data types of each column\ndf.dtypes\n\n\nCheck for Missing Values\n\n\n# Check for missing values in each column\ndf.isnull().sum()\n\nUnnamed: 0                        0\nDate_time                         0\ndate_documented                   0\nYear                              0\nMonth                             0\nHour                              0\nSeason                            0\nCountry_Code                    259\nCountry                         259\nRegion                          566\nLocale                          457\nlatitude                          0\nlongitude                         0\nUFO_shape                      1930\nlength_of_encounter_seconds       0\nEncounter_Duration                0\nDescription                      15\ndtype: int64\n\n\n\nDisplay Unique Values in a Column\n\n\n# Display unique values in a specific column (replace 'column_name' with the actual column name)\ndf['Season'].unique()\n\narray(['Autumn', 'Winter', 'Spring', 'Summer'], dtype=object)\n\n\n\nDisplay Value Counts for a Column\n\n\n# Display value counts for a specific column (replace 'column_name' with the actual column name)\ndf['UFO_shape'].value_counts()\n\nUFO_shape\nLight        16565\nTriangle      7865\nCircle        7607\nFireball      6208\nOther         5649\nUnknown       5584\nSphere        5387\nDisk          5213\nOval          3733\nFormation     2457\nCigar         2057\nChanging      1962\nFlash         1328\nRectangle     1296\nCylinder      1283\nDiamond       1178\nChevron        952\nEgg            759\nTeardrop       750\nCone           316\nCross          233\nDelta            7\nRound            2\nCrescent         2\nPyramid          1\nFlare            1\nHexagon          1\nDome             1\nChanged          1\nName: count, dtype: int64\n\n\n\nDisplay the Shape of the DataFrame\n\n\n# Display the shape of the DataFrame (number of rows and columns)\ndf.shape\n\n(80328, 17)\n\n\n\nDisplay Correlation Matrix\n\n\n# Display the correlation matrix for numerical columns\ndf.corr(numeric_only=True)\n\n\n\n\n\n\n\n\nUnnamed: 0\nYear\nMonth\nHour\nlatitude\nlongitude\nlength_of_encounter_seconds\n\n\n\n\nUnnamed: 0\n1.000000\n-0.055143\n-0.041756\n0.031134\n0.060405\n-0.006686\n0.001302\n\n\nYear\n-0.055143\n1.000000\n-0.025127\n0.040974\n0.002784\n-0.014156\n-0.010510\n\n\nMonth\n-0.041756\n-0.025127\n1.000000\n0.023835\n0.029142\n-0.012316\n0.001245\n\n\nHour\n0.031134\n0.040974\n0.023835\n1.000000\n0.011434\n-0.012567\n-0.002810\n\n\nlatitude\n0.060405\n0.002784\n0.029142\n0.011434\n1.000000\n-0.390241\n0.002645\n\n\nlongitude\n-0.006686\n-0.014156\n-0.012316\n-0.012567\n-0.390241\n1.000000\n0.006452\n\n\nlength_of_encounter_seconds\n0.001302\n-0.010510\n0.001245\n-0.002810\n0.002645\n0.006452\n1.000000\n\n\n\n\n\n\n\n\nPlot Histograms for Numerical Columns\n\n\n%pip install matplotlib\n\nCollecting matplotlib\n  Downloading matplotlib-3.9.1-cp312-cp312-macosx_11_0_arm64.whl.metadata (11 kB)\nCollecting contourpy&gt;=1.0.1 (from matplotlib)\n  Downloading contourpy-1.2.1-cp312-cp312-macosx_11_0_arm64.whl.metadata (5.8 kB)\nCollecting cycler&gt;=0.10 (from matplotlib)\n  Using cached cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)\nCollecting fonttools&gt;=4.22.0 (from matplotlib)\n  Downloading fonttools-4.53.1-cp312-cp312-macosx_11_0_arm64.whl.metadata (162 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 162.6/162.6 kB 3.5 MB/s eta 0:00:00a 0:00:01\nCollecting kiwisolver&gt;=1.3.1 (from matplotlib)\n  Downloading kiwisolver-1.4.5-cp312-cp312-macosx_11_0_arm64.whl.metadata (6.4 kB)\nRequirement already satisfied: numpy&gt;=1.23 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib) (2.0.0)\nRequirement already satisfied: packaging&gt;=20.0 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib) (24.0)\nCollecting pillow&gt;=8 (from matplotlib)\n  Downloading pillow-10.4.0-cp312-cp312-macosx_11_0_arm64.whl.metadata (9.2 kB)\nCollecting pyparsing&gt;=2.3.1 (from matplotlib)\n  Downloading pyparsing-3.1.2-py3-none-any.whl.metadata (5.1 kB)\nRequirement already satisfied: python-dateutil&gt;=2.7 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib) (2.9.0.post0)\nRequirement already satisfied: six&gt;=1.5 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from python-dateutil&gt;=2.7-&gt;matplotlib) (1.16.0)\nDownloading matplotlib-3.9.1-cp312-cp312-macosx_11_0_arm64.whl (7.8 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 7.8/7.8 MB 46.0 MB/s eta 0:00:00a 0:00:01\nDownloading contourpy-1.2.1-cp312-cp312-macosx_11_0_arm64.whl (245 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 245.3/245.3 kB 17.3 MB/s eta 0:00:00\nUsing cached cycler-0.12.1-py3-none-any.whl (8.3 kB)\nDownloading fonttools-4.53.1-cp312-cp312-macosx_11_0_arm64.whl (2.2 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.2/2.2 MB 51.7 MB/s eta 0:00:0000:01\nDownloading kiwisolver-1.4.5-cp312-cp312-macosx_11_0_arm64.whl (64 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 65.0/65.0 kB 7.8 MB/s eta 0:00:00\nDownloading pillow-10.4.0-cp312-cp312-macosx_11_0_arm64.whl (3.4 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.4/3.4 MB 49.6 MB/s eta 0:00:00a 0:00:01\nDownloading pyparsing-3.1.2-py3-none-any.whl (103 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 103.2/103.2 kB 11.4 MB/s eta 0:00:00\nInstalling collected packages: pyparsing, pillow, kiwisolver, fonttools, cycler, contourpy, matplotlib\nSuccessfully installed contourpy-1.2.1 cycler-0.12.1 fonttools-4.53.1 kiwisolver-1.4.5 matplotlib-3.9.1 pillow-10.4.0 pyparsing-3.1.2\n\n[notice] A new release of pip is available: 24.0 -&gt; 24.1.1\n[notice] To update, run: pip install --upgrade pip\nNote: you may need to restart the kernel to use updated packages.\n\n\n\nimport matplotlib.pyplot as plt\n\n# Plot histograms for numerical columns\ndf.hist(figsize=(10, 10), bins=30, edgecolor='black')\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nPlot a Heatmap of Missing Values (using seaborn)\n\n\n%pip install seaborn\n\nCollecting seaborn\n  Downloading seaborn-0.13.2-py3-none-any.whl.metadata (5.4 kB)\nRequirement already satisfied: numpy!=1.24.0,&gt;=1.20 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from seaborn) (2.0.0)\nRequirement already satisfied: pandas&gt;=1.2 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from seaborn) (2.2.2)\nRequirement already satisfied: matplotlib!=3.6.1,&gt;=3.4 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from seaborn) (3.9.1)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (1.2.1)\nRequirement already satisfied: cycler&gt;=0.10 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (0.12.1)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (4.53.1)\nRequirement already satisfied: kiwisolver&gt;=1.3.1 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (1.4.5)\nRequirement already satisfied: packaging&gt;=20.0 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (24.0)\nRequirement already satisfied: pillow&gt;=8 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (10.4.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (3.1.2)\nRequirement already satisfied: python-dateutil&gt;=2.7 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from pandas&gt;=1.2-&gt;seaborn) (2024.1)\nRequirement already satisfied: tzdata&gt;=2022.7 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from pandas&gt;=1.2-&gt;seaborn) (2024.1)\nRequirement already satisfied: six&gt;=1.5 in /Users/josephmuller/.pyenv/versions/3.12.3/lib/python3.12/site-packages (from python-dateutil&gt;=2.7-&gt;matplotlib!=3.6.1,&gt;=3.4-&gt;seaborn) (1.16.0)\nDownloading seaborn-0.13.2-py3-none-any.whl (294 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 294.9/294.9 kB 5.6 MB/s eta 0:00:00a 0:00:01\nInstalling collected packages: seaborn\nSuccessfully installed seaborn-0.13.2\n\n[notice] A new release of pip is available: 24.0 -&gt; 24.1.1\n[notice] To update, run: pip install --upgrade pip\nNote: you may need to restart the kernel to use updated packages.\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Plot a heatmap of missing values\nplt.figure(figsize=(12, 6))\nsns.heatmap(df.isnull(), cbar=False, cmap='viridis')\nplt.show()\n\n\n\n\n\n\n\n\n\nPlot Pairwise Relationships\n\n\n# Plot pairwise relationships in the dataset (useful for numerical columns)\n# Warning - this may take a long time to execute if the dataset is large\nsns.pairplot(df)\nplt.show()\n\n\n\n\n\n\n\n\n\nDisplay a Random Sample of Rows\n\n\n# Display a random sample of rows (replace 5 with the desired number of rows)\ndf.sample(5)\n\nI’ve conveniently packaged these commands into a single code block you can turn into a handy snippet:\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Define the file path to the CSV file\nfile_path = 'path/to/your/file.csv'\n\n# Load the CSV file into a DataFrame\ndf = pd.read_csv(file_path)\n\n# Display the first few rows of the DataFrame\n# print(df.head())\n\n# Display the last few rows of the DataFrame\n# print(df.tail())\n\n# Display basic information about the DataFrame\n# print(df.info())\n\n# Display summary statistics for numerical columns\n# print(df.describe())\n\n# Display the column names\n# print(df.columns)\n\n# Display data types of each column\n# print(df.dtypes)\n\n# Check for missing values in each column\n# print(df.isnull().sum())\n\n# Display unique values in a specific column (replace 'column_name' with the actual column name)\n# print(df['column_name'].unique())\n\n# Display value counts for a specific column (replace 'column_name' with the actual column name)\n# print(df['column_name'].value_counts())\n\n# Display the shape of the DataFrame (number of rows and columns)\n# print(df.shape)\n\n# Display the correlation matrix for numerical columns\n# print(df.corr())\n\n# Plot histograms for numerical columns\n# df.hist(figsize=(10, 10), bins=30, edgecolor='black')\n# plt.tight_layout()\n# plt.show()\n\n# Plot a heatmap of missing values\n# plt.figure(figsize=(12, 6))\n# sns.heatmap(df.isnull(), cbar=False, cmap='viridis')\n# plt.show()\n\n# Plot pairwise relationships in the dataset (useful for numerical columns)\n# sns.pairplot(df)\n# plt.show()\n\n# Display a random sample of rows (replace 5 with the desired number of rows)\n# print(df.sample(5))\n\nBelow is the snippet form of this code which can be pasted into a VS Code snippets file.\n\n{\n    \"Analyze DataFrame\": {\n        \"prefix\": \"analyze_df\",\n        \"body\": [\n            \"import pandas as pd\",\n            \"import seaborn as sns\",\n            \"import matplotlib.pyplot as plt\",\n            \"\",\n            \"# Define the file path to the CSV file\",\n            \"file_path = 'path/to/your/file.csv'\",\n            \"\",\n            \"# Load the CSV file into a DataFrame\",\n            \"df = pd.read_csv(file_path)\",\n            \"\",\n            \"# Display the first few rows of the DataFrame\",\n            \"# print(df.head())\",\n            \"\",\n            \"# Display the last few rows of the DataFrame\",\n            \"# print(df.tail())\",\n            \"\",\n            \"# Display basic information about the DataFrame\",\n            \"# print(df.info())\",\n            \"\",\n            \"# Display summary statistics for numerical columns\",\n            \"# print(df.describe())\",\n            \"\",\n            \"# Display the column names\",\n            \"# print(df.columns)\",\n            \"\",\n            \"# Display data types of each column\",\n            \"# print(df.dtypes)\",\n            \"\",\n            \"# Check for missing values in each column\",\n            \"# print(df.isnull().sum())\",\n            \"\",\n            \"# Display unique values in a specific column (replace 'column_name' with the actual column name)\",\n            \"# print(df['column_name'].unique())\",\n            \"\",\n            \"# Display value counts for a specific column (replace 'column_name' with the actual column name)\",\n            \"# print(df['column_name'].value_counts())\",\n            \"\",\n            \"# Display the shape of the DataFrame (number of rows and columns)\",\n            \"# print(df.shape)\",\n            \"\",\n            \"# Display the correlation matrix for numerical columns\",\n            \"# print(df.corr())\",\n            \"\",\n            \"# Plot histograms for numerical columns\",\n            \"# df.hist(figsize=(10, 10), bins=30, edgecolor='black')\",\n            \"# plt.tight_layout()\",\n            \"# plt.show()\",\n            \"\",\n            \"# Plot a heatmap of missing values\",\n            \"# plt.figure(figsize=(12, 6))\",\n            \"# sns.heatmap(df.isnull(), cbar=False, cmap='viridis')\",\n            \"# plt.show()\",\n            \"\",\n            \"# Plot pairwise relationships in the dataset (useful for numerical columns)\",\n            \"# sns.pairplot(df)\",\n            \"# plt.show()\",\n            \"\",\n            \"# Display a random sample of rows (replace 5 with the desired number of rows)\",\n            \"# print(df.sample(5))\"\n        ],\n        \"description\": \"Analyze a DataFrame with various commands commented out for selective use\"\n    }\n}"
  }
]